//
// OpenESP build definition
// Simply run 'gradle' to build it all
//
import org.apache.tools.ant.filters.ReplaceTokens

project.version = openEspVersion
println "OpenESP version " + openEspVersion + " with tomcat " + tomcatVersion + ", Solr " + solrVersion

apply plugin: 'java'
project.ext.basename = "openesp"

project.ext.set("tmpDir", System.getProperty("java.io.tmpdir"))
def deployDir = 'build/openesp'
def openEspZipName = "openesp-${openEspVersion}.zip"
def tomcatName = "apache-tomcat-${tomcatVersion}"
def architecture = "-windows-x64"
def tomcatUrl = "http://apache.uib.no/tomcat/tomcat-7/v${tomcatVersion}/bin/${tomcatName}${architecture}.zip"
def tomcatDir = "${deployDir}/tomcat"

defaultTasks 'dist' 

task cleanAll (dependsOn: ':openesp-solr:clean') { 
  doLast {
    println "Cleaning"
    delete 'build'
  }
}

task init {
    outputs.file 'build/openesp/version.properties'
    doLast {
      mkdir tmpDir
      mkdir deployDir
      copy {
        from 'initial'
        into "${deployDir}"
      }
      println "Creating versions file"
      def fields = ["openesp.version":openEspVersion, "solr.version":solrVersion, "tomcat.version":tomcatVersion]
      new File("${deployDir}/version.properties").withWriter { out ->
          fields.each() { key, value ->
              out.writeLine("${key} = ${value}")
          }
      }
    }
}

task getTomcat (dependsOn: 'init'){
  def tomcatZipFile = "${tmpDir}/${tomcatName}.zip"
  def tomcatFromDir = "${deployDir}/${tomcatName}"
  def tomcatToDir = "${tomcatDir}"
  outputs.file tomcatZipFile
  doLast {
    println "Downloading Tomcat to ${tmpDir}"
    ant {
      get src:tomcatUrl,
      dest:tomcatZipFile, verbose:"false"
    }
  }
}

task deployTomcat (dependsOn: 'getTomcat') {
  def tomcatZipFile = "${tmpDir}/${tomcatName}.zip"
  def tomcatFromDir = "${deployDir}/${tomcatName}"
  def tomcatToDir = "${tomcatDir}"
  outputs.dir "${tomcatToDir}/bin"
  doLast {
    println "Unpacking Tomcat into ${deployDir}"
    copy {
      from zipTree(tomcatZipFile)
      into "${deployDir}"
    }
    new File(tomcatFromDir).renameTo(new File(tomcatToDir))    
  }
}

task deploySolr (dependsOn: [':openesp-solr:organizeForOpenESP', 'init']) {
  outputs.file "${deployDir}/bin/post.jar"
  doLast {
    println "Deploying Solr into ${deployDir}"
    copy {
      from "openesp-solr/build/openesp"
      into "${deployDir}"
    }
  }
}

task deployServiceWrapper (dependsOn: ['deployTomcat']) {
  outputs.file "${deployDir}/bin/openesp.sh"
  doLast {
    println "Copying service wrappers into bin folder"
    copy {
      from "${tomcatDir}/bin"
      include '**/*.exe'
      rename 'tomcat7(.*)', 'OpenESP$1'
      into "${deployDir}/bin"
    }
  }
}

task deployOverlay (dependsOn: ['deploySolr', 'deployTomcat']) {
  outputs.file "${deployDir}/conf/logging.properties"
  doLast {
    println "Deploying overlay to ${deployDir}"
    copy {
      from 'overlay'
      into "${deployDir}"
    }
  }
}


task doZip (type: Zip, dependsOn: ['deployServiceWrapper', 'deployOverlay']) {
  outputs.file "${doZip.archiveName}"
  from "${deployDir}"
  doLast {
    println "Packaging into ZIP ${doZip.archiveName}"
  }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.2'
}

task dist (dependsOn: 'doZip') {
  doLast {
    println "DONE"
  }
}
