// Build file for Solr as part of OpenESP
def fullName = "solr-${solrVersion}"
def binUrl = "http://apache.uib.no/lucene/solr/$solrVersion/${fullName}.zip"
def buildDir = 'build'
def warName = "${fullName}.war"
def zipName = "${fullName}.zip"
def zipPath = "${tmpDir}/${zipName}"
def unzippedPath = "${buildDir}/${fullName}"
def warPath = "${unzippedPath}/dist/${warName}"
def deployDir = "${buildDir}/openesp"

defaultTasks 'organizeForOpenESP' 

task clean {
	doLast {
		delete buildDir
	} 
}

task init {
	outputs.dir buildDir
	doLast {
		mkdir buildDir
	}
}

task getSolr (dependsOn: 'init') {
	outputs.file "${zipPath}"
	doLast {
    println "Downloading Solr ${solrVersion} into ${tmpDir}"
		ant {
			get src:binUrl,
			dest:tmpDir, verbose:"false"
		}
	}
}

task unpackSolr (dependsOn: 'getSolr') {
	outputs.dir "${unzippedPath}"
	doLast {
    println "Unpacking Solr into ${buildDir}"
		copy {
			from zipTree(zipPath)
			into "${buildDir}"
		}
	}
}

task organizeForOpenESP (dependsOn: 'unpackSolr') {
	outputs.file "${deployDir}/tomcat/conf/Catalina/localhost/solr.xml"
	doLast {
		copy {
			from warPath
			into "${deployDir}/webapps"
			rename warName, 'solr.war'
		}
		copy {
			from 'solr-tomcat-context.xml'
			into "${deployDir}/tomcat/conf/Catalina/localhost"
			rename 'solr-tomcat-context.xml', "solr.xml"
		}
		copy {
			from "${unzippedPath}/example/solr"
			into "${deployDir}/conf/solr"
		}
		copy {
			from ("${unzippedPath}/dist") {
			  include 'solr-langid-*'
			  include 'solr-velocity-*'
			  include 'solr-dataimport*'
			  include 'solr-cell-*'
			}
			into "${deployDir}/lib/solr"
		}
		copy {
			from "${unzippedPath}/contrib/langid/lib"
			into "${deployDir}/lib/solr"
		}
		copy {
			from "${unzippedPath}/contrib/velocity/lib"
			into "${deployDir}/lib/solr"
		}
		copy {
			from "${unzippedPath}/contrib/dataimporthandler/lib"
			into "${deployDir}/lib/solr"
		}
		copy {
			from "${unzippedPath}/contrib/extraction/lib"
			into "${deployDir}/lib/solr"
		}
		copy {
			from "${unzippedPath}/example/exampledocs/post.jar"
			into "${deployDir}/bin"
		}
	}
}